


'use strict';var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};

var ReactNative=require('../react-native-mock/react-native');
var React=require('react');




var renderToHTML=function renderToHTML(type){
var proto=ReactNative[type].prototype;
if(typeof proto!=='undefined'){
var render=function render(){
var properties={className:type};
_extends(properties,this.props);



if(typeof this.props.onPress!=='undefined'){
properties.onClick=this.props.onPress;
delete properties.onPress;
}

return(
React.createElement('div',properties,this.props.children));

};

proto['render']=render;
}
};




[
'ActivityIndicatorIOS',
'ART',
'DatePickerIOS',
'DrawerLayoutAndroid',
'Image',
'ImageEditor',
'ImageStore',
'ListView',
'MapView',
'Modal',
'Navigator',
'NavigatorIOS',
'Picker',
'PickerIOS',
'ProgressBarAndroid',
'ProgressViewIOS',
'ScrollView',
'SegmentedControlIOS',
'SliderIOS',
'SnapshotViewIOS',
'Switch',
'PullToRefreshViewAndroid',
'RecyclerViewBackedScrollView',
'RefreshControl',
'SwitchAndroid',
'SwitchIOS',
'TabBarIOS',
'Text',
'TextInput',
'ToastAndroid',
'ToolbarAndroid',
'Touchable',
'TouchableHighlight',
'TouchableNativeFeedback',
'TouchableOpacity',
'TouchableWithoutFeedback',
'View',
'ViewPagerAndroid',
'WebView'].
forEach(renderToHTML);

module.exports=ReactNative;